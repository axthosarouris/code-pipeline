AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: Builds Pipelines


Resources:

  PipelineConnection:
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName: 'repo-connection'
      ProviderType: GitHub

  PipelineBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'pipeline-${AWS::AccountId}'

  DeployStackRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'MasterPipelines-DeployStackRole-${AWS::AccountId}'
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service: [ codepipeline.amazonaws.com, cloudformation.amazonaws.com ]
        Version: '2012-10-17'
      Policies:
        - PolicyName: DeployLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                Effect: Allow
                Resource:
                  - "*"
              - Action:
                  - s3:*
                  - cloudformation:CreateChangeSet
                  - iam:CreateRole
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:GetRole
                  - iam:PutRolePolicy
                  - iam:DeleteRolePolicy
                  - lambda:CreateFunction
                  - lambda:DeleteFunction
                  - lambda:GetFunction
                  - lambda:TagResource
                  - iam:PassRole
                Effect: Allow
                Resource: "*"


  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service: [ codepipeline.amazonaws.com ]
        Version: '2012-10-17'
      Policies:
        - PolicyName: DeployLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                Effect: Allow
                Resource:
                  - "*"
              - Action:
                  - codestar-connections:CreateConnection
                  - codestar-connections:DeleteConnection
                  - codestar-connections:UseConnection
                  - codestar-connections:GetConnection
                  - codestar-connections:ListConnections
                  - codestar-connections:ListInstallationTargets
                  - codestar-connections:GetInstallationUrl
                  - codestar-connections:StartOAuthHandshake
                  - codestar-connections:UpdateConnectionInstallation
                  - codestar-connections:GetIndividualAccessToken
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - cloudformation:DescribeStacks
                  - cloudformation:CreateStack
                  - iam:PassRole
                  - s3:*
                Effect: Allow
                Resource: "*"


  PoetryLambda:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://orestis-tests-deployment.s3.eu-west-1.amazonaws.com/pipeline-template.yml
      Parameters:
        DeployStackRoleArn: !GetAtt DeployStackRole.Arn
        Repository: axthosarouris/poetry-lambda
        PipelineRoleArn: !GetAtt PipelineRole.Arn
        PipelineConnectionArn: !GetAtt PipelineConnection.ConnectionArn
        PipelineBucketName: !Ref PipelineBucket




